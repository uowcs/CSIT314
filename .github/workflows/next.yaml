name: Next.js CI/CD with DevSecOps

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  code-quality-and-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Sonarqube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Setup and install dependencies
        working-directory: ./frontend
        run: |
          npm install
          npm run lint

      - name: Snyk Vulnerability Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
  build-and-test:
    needs: code-quality-and-security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build
        working-directory: ./frontend
        run: npm run build

      - name: Run Tests
        working-directory: ./frontend
        run: npm test

  load-testing:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Locust
        run: |
          python -m pip install --upgrade pip
          pip install locust

      - name: Run Locust to test the application performance
        run: |
          locust -f ./frontend/locustfile.py --host https://csit-314.vercel.app/ --headless -u 100 -r 10 --run-time 1m

      
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/your-image-name:${{ github.sha }}
